# Adapted from https://github.com/BurntSushi/ripgrep/actions/runs/203327744/workflow
name: ci

on:
  pull_request:
  push:
    branches:
      - master
  schedule:
    - cron: '00 01 * * *'

jobs:
  test:
    name: test
    env:
      CARGO: cargo
      TARGET_FLAGS:
      TARGET_DIR: ./target
      RUST_BACKTRACE: 1
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build:
          # Build on each branch of rust
          - stable
          - beta
          - nightly
          # Build on release targets
          - stable-musl
          - macos
        include:
          - build: stable
            os: ubuntu-18.04
            rust: stable
          - build: beta
            os: ubuntu-18.04
            rust: beta
          - build: nightly
            os: ubuntu-18.04
            rust: nightly
          - build: stable-musl
            os: ubuntu-18.04
            rust: stable
            target: x86_64-unknown-linux-musl
          - build: macos
            os: macos-latest
            rust: stable
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true

      - name: Use Cross
        if: matrix.target != ''
        run: |
          # FIXME: to work around bugs in latest cross release, install master.
          # See: https://github.com/rust-embedded/cross/issues/357
          cargo install --git https://github.com/rust-embedded/cross
          echo "::set-env name=CARGO::cross"
          echo "::set-env name=TARGET_FLAGS::--target ${{ matrix.target }}"
          echo "::set-env name=TARGET_DIR::./target/${{ matrix.target }}"

      - name: Show command used for Cargo
        run: |
          echo "cargo command is: ${{ env.CARGO }}"
          echo "target flag is: ${{ env.TARGET_FLAGS}}"
          echo "target dir is: ${{ env.TARGET_DIR }}"

      - name: Build notes
        run: ${{ env.CARGO }} build --verbose --release ${{ env.TARGET_FLAGS }}

      # Tests disabled for now as testing framework presently fails.
      # - name: Run tests
      #   run: ${{ env.CARGO }} test --verbose --all ${{ env.TARGET_FLAGS }}

  rustfmt:
    name: rustfmt
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: rustfmt
      - name: Check formatting
        run: |
          cargo fmt --all -- --check
